{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./../../components/template/header/header.service\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../components/product/product-read/product-read.component\";\n\nfunction ProductCrudComponent_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const street_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", street_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", street_r2, \" \");\n  }\n}\n\nexport class ProductCrudComponent {\n  constructor(router, headerService) {\n    this.router = router;\n    this.headerService = headerService;\n    headerService.headerData = {\n      title: 'Cadastro de Produtos',\n      icon: 'storefront',\n      icon2: 'logout',\n      routeUrl: '/products'\n    };\n  }\n\n  ngOnInit() {}\n\n  navigateToProductCreate() {\n    this.router.navigate(['/products/create']);\n  }\n\n}\n\nProductCrudComponent.ɵfac = function ProductCrudComponent_Factory(t) {\n  return new (t || ProductCrudComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HeaderService));\n};\n\nProductCrudComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductCrudComponent,\n  selectors: [[\"app-product-crud\"]],\n  decls: 9,\n  vars: 5,\n  consts: [[\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"example-form\"], [\"type\", \"text\", \"placeholder\", \"Search for a street\", 3, \"formControl\", \"matAutocomplete\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function ProductCrudComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function ProductCrudComponent_Template_button_click_0_listener() {\n        return ctx.navigateToProductCreate();\n      });\n      i0.ɵɵtext(1, \" Novo Produto\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 1);\n      i0.ɵɵelement(3, \"input\", 2);\n      i0.ɵɵelementStart(4, \"mat-autocomplete\", null, 3);\n      i0.ɵɵtemplate(6, ProductCrudComponent_mat_option_6_Template, 2, 2, \"mat-option\", 4);\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"app-product-read\");\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(5);\n\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formControl\", ctx.control)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(7, 3, ctx.filteredStreets));\n    }\n  },\n  directives: [i3.MatButton, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.NgControlStatus, i5.NgForOf, i6.ProductReadComponent],\n  pipes: [i5.AsyncPipe],\n  styles: [\"button[_ngcontent-%COMP%]{\\n\\nmargin-bottom: 30px;\\n\\n}\\n.active-pink-2[_ngcontent-%COMP%]   input[type=search][_ngcontent-%COMP%]:focus:not([readonly]) {\\n    border-bottom: 1px solid #f48fb1;\\n    box-shadow: 0 1px 0 0 #f48fb1;\\n    }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3QtY3J1ZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLG1CQUFtQjs7QUFFbkI7QUFDQTtJQUNJLGdDQUFnQztJQUNoQyw2QkFBNkI7SUFDN0IiLCJmaWxlIjoicHJvZHVjdC1jcnVkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b257XG5cbm1hcmdpbi1ib3R0b206IDMwcHg7XG5cbn1cbi5hY3RpdmUtcGluay0yIGlucHV0W3R5cGU9c2VhcmNoXTpmb2N1czpub3QoW3JlYWRvbmx5XSkge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZjQ4ZmIxO1xuICAgIGJveC1zaGFkb3c6IDAgMXB4IDAgMCAjZjQ4ZmIxO1xuICAgIH0iXX0= */\"]\n});","map":{"version":3,"sources":["C:\\Users\\Car\\Documents\\projeto\\loja\\frontend\\src\\app\\views\\product-crud\\product-crud.component.ts","C:\\Users\\Car\\Documents\\projeto\\loja\\frontend\\src\\app\\views\\product-crud\\product-crud.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router'\nimport { HeaderService } from './../../components/template/header/header.service';\n@Component({\n  selector: 'app-product-crud',\n  templateUrl: './product-crud.component.html',\n  styleUrls: ['./product-crud.component.css']\n})\nexport class ProductCrudComponent implements OnInit {\n \n constructor(private router: Router,private headerService: HeaderService){ \n headerService.headerData={\n  title:'Cadastro de Produtos',\n  icon:'storefront',\n  icon2:'logout',\n  routeUrl:'/products'\n\n\n}\n\n }\n  ngOnInit(): void {\n  }\nnavigateToProductCreate(): void{\nthis.router.navigate(['/products/create'])\n  \n}\n}\n","<button mat-raised-button (click)=\"navigateToProductCreate()\"\n    color=\"primary\">\n    Novo Produto\n</button>\n\n<!-- Search form -->\n\n\n<form class=\"example-form\">\n    <input type=\"text\"\n           placeholder=\"Search for a street\"\n           [formControl]=\"control\"\n           [matAutocomplete]=\"auto\">\n    <mat-autocomplete #auto=\"matAutocomplete\">\n      <mat-option *ngFor=\"let street of filteredStreets | async\" [value]=\"street\">\n        {{street}}\n      </mat-option>\n    </mat-autocomplete>\n  </form>\n    \n<app-product-read></app-product-read>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}